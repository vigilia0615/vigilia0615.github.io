#宣傳新產品的廣告代理商希望就廣告達到的人數而言，獲得最大的曝光率。該機構將採用兩種方法：集中的互聯網廣告（每次廣告投放預計可吸引200,000人）和印刷媒體（每次廣告投放預計可達到80,000人）。每個Internet突發事件的成本為3,000美元，而每個平面媒體廣告的成本僅為900美元。已經同意，平面媒體廣告的數量將不超過互聯網突發數量的五倍。該機構希望至少發布5個且不超過15個互聯網廣告。廣告預算為$ 75.000鑑於這些限制，最有效的廣告策略是什麼？

​
from pulp import *
​
prob = LpProblem("Textile", LpMaximize)
​
# 變數
A = LpVariable("A", lowBound=0, cat='Integer')
B = LpVariable("B", lowBound=0, cat='Integer')
​
# 目標
prob += 200000* A + 80000 * B
prob += 3000 *A+900*B<=75000
# 限制
prob += A *5>=B*1
prob += A*1>=5
prob +=A*1<=15
​
# 解算
prob.writeLP("Textile.lp")
prob.solve()
​
if prob.status == 1:
    # 解答物件
​
    for i in prob.variables():
        if i.name == 'A':
            Pants= i
        elif i.name == 'B':
            Jacket = i
​
    print ("互聯網廣告=%d\n平面廣告=%d\n$=%.1f" %
        (A.varValue,B.varValue,
         value(prob.objective)))
​
else:
    print ("FAIL")
互聯網廣告=10
平面廣告=50
$=6000000.0
#minimize cost=$0.10A+$0.15B
#Subest to 
#5A+10B>=45
#4A+3B>=24
#0.5A>=1.5
#A,B>=0
from scipy.optimize import linprog 
​
C = [0.10, 0.15]
A = [[-5, -10], [-4, 3]]
B = [-45, -24]
x0_bounds = (3, None)
x1_bounds = (0, None)
​
res = linprog(C, A, B, bounds=[x0_bounds, x1_bounds])
print(res)
     con: array([], dtype=float64)
     fun: 0.8454545454592667
 message: 'Optimization terminated successfully.'
     nit: 5
   slack: array([1.58337343e-10, 4.68645567e-10])
  status: 0
 success: True
       x: array([6.81818182, 1.09090909])
